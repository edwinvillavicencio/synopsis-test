<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>ws.synopsis</groupId>
  <artifactId>synopsis-test</artifactId>
  <packaging>jar</packaging>
  <version>1.0.0</version>

  <name>synopsis-test</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <spring.boot-version>3.3.4</spring.boot-version>
    <surefire.plugin.version>3.0.0-M4</surefire.plugin.version>
    <camel.version>4.8.0</camel.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- Camel BOM -->
      <dependency>
        <groupId>org.apache.camel.springboot</groupId>
        <artifactId>camel-spring-boot-bom</artifactId>
        <version>4.8.0</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- Spring Boot BOM -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring.boot-version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Libs Fwk -->
    <dependency>
      <groupId>ws.synopsis</groupId>
      <artifactId>fwk-integration-lib</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>

    <!-- Spring Boot -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-tomcat</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-undertow</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <!-- Camel -->
    <dependency>
      <groupId>org.apache.camel.springboot</groupId>
      <artifactId>camel-spring-boot-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel.springboot</groupId>
      <artifactId>camel-stream-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel.springboot</groupId>
      <artifactId>camel-platform-http-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel.springboot</groupId>
      <artifactId>camel-resilience4j-starter</artifactId>
    </dependency>

    <!-- openapi support -->
    <dependency>
      <groupId>org.apache.camel.springboot</groupId>
      <artifactId>camel-rest-openapi-starter</artifactId>
    </dependency>

    <!-- json support -->
    <dependency>
      <groupId>org.apache.camel.springboot</groupId>
      <artifactId>camel-jackson-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>com.googlecode.json-simple</groupId>
      <artifactId>json-simple</artifactId>
      <version>1.1.1</version>
    </dependency>

    <!-- include camel developer console -->
    <dependency>
      <groupId>org.apache.camel.springboot</groupId>
      <artifactId>camel-console-starter</artifactId>
    </dependency>

    <!-- include JMX that allows additional information in camel developer console -->
    <dependency>
      <groupId>org.apache.camel.springboot</groupId>
      <artifactId>camel-management-starter</artifactId>
    </dependency>

    <!-- Camel CLI -->
    <dependency>
      <groupId>org.apache.camel.springboot</groupId>
      <artifactId>camel-cli-connector-starter</artifactId>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- R2DBC Starter -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-r2dbc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>r2dbc-postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- Test -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-test-spring-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.r2dbc</groupId>
      <artifactId>r2dbc-h2</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- opentelemetry -->
    <dependency>
      <groupId>org.apache.camel.springboot</groupId>
      <artifactId>camel-opentelemetry-starter</artifactId>
      <version>${camel.version}</version>
    </dependency>

    <!-- Agregamos Prometheus dependency  -->
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
    </dependency>

    <!-- end:: opentelemetry -->

    <dependency>
      <groupId>com.legsem.legstar</groupId>
      <artifactId>legstar-maven-plugin</artifactId>
      <version>2.1.2</version>
    </dependency>

  </dependencies>

  <repositories>
    <repository>
      <id>nexus.snapshot</id>
      <url>https://nexus.synopsis.cloud/repository/nexus-snapshots/</url>
    </repository>
    <repository>
      <id>nexus.release</id>
      <url>https://nexus.synopsis.cloud/repository/nexus-releases/</url>
    </repository>
    <repository>
      <id>maven.group</id>
      <url>https://nexus.synopsis.cloud/repository/maven-group/</url>
    </repository>
  </repositories>

  <distributionManagement>
    <snapshotRepository>
      <id>nexus.snapshot</id>
      <url>https://nexus.synopsis.cloud/repository/nexus-snapshots/</url>
    </snapshotRepository>
    <repository>
      <id>nexus.release</id>
      <url>https://nexus.synopsis.cloud/repository/nexus-releases/</url>
    </repository>
  </distributionManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>io.swagger.codegen.v3</groupId>
        <artifactId>swagger-codegen-maven-plugin</artifactId>
        <version>3.0.52</version>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <!-- we only want to generate the model classes for spring boot -->
              <language>spring</language>
              <library>spring-boot3</library>
              <inputSpec>${project.basedir}/src/main/resources/ws.synopsis.petstoreapi.json</inputSpec>
              <modelPackage>ws.synopsis.petstoreapi.model</modelPackage>
              <generateApis>false</generateApis>
              <generateApiDocumentation>false</generateApiDocumentation>
              <generateModelDocumentation>false</generateModelDocumentation>
              <generateApiTests>false</generateApiTests>
              <generateModelTests>false</generateModelTests>
              <generateSupportingFiles>false</generateSupportingFiles>
              <generateModels>true</generateModels>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- include the model classes to source folder -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.5.0</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>target/swagger/src/main/java</source>
                <source>target/cobol/src/main/java</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.11.0</version>
        <configuration>
          <release>17</release>
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>1.18.34</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring.boot-version}</version>
        <configuration>
          <excludes>
            <exclude>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
            </exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire.plugin.version}</version>
      </plugin>

      <plugin>
        <groupId>com.legsem.legstar</groupId>
        <artifactId>legstar-maven-plugin</artifactId>
        <version>2.1.2</version>
        <executions>
          <execution>
            <id>generate-java-from-copybook</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate-base</goal>
            </goals>
            <configuration>
              <!-- Ruta del archivo Copybook -->
              <sourceDirectory>src/main/resources/import/</sourceDirectory>
              <!-- Directorio de salida para las clases generadas -->
              <outputDirectory>target/generated-sources/cobol/src/main/java/ws.synopsis.cobol.model</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
